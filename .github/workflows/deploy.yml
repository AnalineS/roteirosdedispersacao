name: Deploy Frontend & Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    outputs:
      backend-url: ${{ steps.deploy.outputs.url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: roteiro-dispensacao-hanseniase
        
    - name: Configure Docker for gcloud
      run: gcloud auth configure-docker
      
    - name: Build and deploy backend to Cloud Run
      id: deploy
      working-directory: ./apps/backend
      run: |
        # Build and submit image to Cloud Build
        gcloud builds submit \
          --tag gcr.io/roteiro-dispensacao-hanseniase/roteiro-dispensacao-api:${{ github.sha }} \
          --project roteiro-dispensacao-hanseniase
        
        # Deploy to Cloud Run with environment variables
        URL=$(gcloud run deploy roteiro-dispensacao-api \
          --image gcr.io/roteiro-dispensacao-hanseniase/roteiro-dispensacao-api:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --concurrency 80 \
          --max-instances 10 \
          --timeout 300 \
          --set-env-vars="ENVIRONMENT=production,DOMAIN=roteirosdedispensacao.com,OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }},HUGGINGFACE_API_KEY=${{ secrets.HUGGINGFACE_API_KEY }},ASTRA_DB_APPLICATION_TOKEN=${{ secrets.ASTRA_DB_APPLICATION_TOKEN }},ASTRA_DB_API_ENDPOINT=${{ secrets.ASTRA_DB_API_ENDPOINT }}" \
          --project roteiro-dispensacao-hanseniase \
          --format="value(status.url)")
        
        echo "backend-url=$URL" >> $GITHUB_OUTPUT

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'apps/frontend/package-lock.json'
        
    - name: Install frontend dependencies
      working-directory: ./apps/frontend
      run: npm ci
      
    - name: Build frontend
      working-directory: ./apps/frontend
      run: npm run build
      env:
        VITE_API_URL: https://roteiro-dispensacao-api-1016586236354.us-central1.run.app
        VITE_ENVIRONMENT: production
        VITE_FIREBASE_PROJECT_ID: roteiros-de-dispensacao
        VITE_FIREBASE_APP_ID: roteiros-de-dispensacao
        VITE_DOMAIN: roteirosdedispensacao.com
        VITE_ENABLE_ANALYTICS: true
        VITE_ENABLE_PWA: true
        VITE_ENABLE_NOTIFICATIONS: true
        VITE_DEFAULT_PERSONA: dr_gasnelio
        VITE_AVAILABLE_PERSONAS: dr_gasnelio,ga
        VITE_CACHE_DURATION: 300000
        VITE_REQUEST_TIMEOUT: 30000
        VITE_RETRY_ATTEMPTS: 3
        VITE_DEBUG_MODE: false
        VITE_LOG_LEVEL: error
        
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ROTEIROS_DE_DISPENSACAO }}
        channelId: live
        projectId: roteiros-de-dispensacao
        entryPoint: ./
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üöÄ Deploy completo realizado!\n\nüì± **Frontend:** https://roteiros-de-dispensacao.web.app\n‚öôÔ∏è **Backend:** ${{ needs.deploy-backend.outputs.backend-url }}\n\n‚úÖ Ambos os servi√ßos foram atualizados automaticamente.'
          })