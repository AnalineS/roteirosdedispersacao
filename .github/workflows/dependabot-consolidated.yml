name: 🤖 Dependabot Manager Consolidado

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches: [main, hml]
  push:
    branches: [dependabot-updates]
  workflow_dispatch:
    inputs:
      force_review_all:
        description: 'Forçar revisão de todos os PRs pendentes'
        required: false
        default: false
        type: boolean

# PERMISSÕES: Mínimas necessárias para operações Dependabot
permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TIMEZONE: 'America/Sao_Paulo'

jobs:
  # ========== JOB 1: ANÁLISE INTELIGENTE DE PRs ==========
  analyze-dependabot:
    name: 🔍 Analisar PR do Dependabot
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    
    outputs:
      update-type: ${{ steps.analyze.outputs.update_type }}
      should-auto-merge: ${{ steps.analyze.outputs.should_auto_merge }}
      security-update: ${{ steps.analyze.outputs.security_update }}
      target-environment: ${{ steps.analyze.outputs.target_environment }}
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        
      - name: 🔍 Obter Metadata do Dependabot
        id: metadata
        uses: dependabot/fetch-metadata@c9c4182bf1b97f5224aee3906fd373f6b61b4526  # v1.6.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: 📊 Análise Inteligente
        id: analyze
        run: |
          echo "🔍 Analisando PR do Dependabot..."
          echo "Base branch: ${{ github.base_ref }}"
          echo "Update type: ${{ steps.metadata.outputs.update-type }}"
          
          TARGET_ENVIRONMENT="staging"
          if [ "${{ github.base_ref }}" = "main" ]; then
            TARGET_ENVIRONMENT="production"
          fi
          
          # Detecção de segurança
          SECURITY_UPDATE=false
          if [[ "${{ github.event.pull_request.title }}" == *"security"* ]] || 
             [[ "${{ github.event.pull_request.title }}" == *"vulnerability"* ]] ||
             [[ "${{ steps.metadata.outputs.alert-state }}" == "OPEN" ]]; then
            SECURITY_UPDATE=true
            echo "🔒 Atualização de SEGURANÇA detectada!"
          fi
          
          # Lógica de auto-merge
          SHOULD_AUTO_MERGE=false
          UPDATE_TYPE="${{ steps.metadata.outputs.update-type }}"
          
          if [ "$SECURITY_UPDATE" = "true" ]; then
            SHOULD_AUTO_MERGE=true
            echo "✅ Auto-merge APROVADO: Vulnerabilidade de segurança"
          elif [ "$UPDATE_TYPE" = "version-update:semver-patch" ]; then
            SHOULD_AUTO_MERGE=true  
            echo "✅ Auto-merge APROVADO: Patch seguro"
          elif [ "$UPDATE_TYPE" = "version-update:semver-minor" ] && [ "$TARGET_ENVIRONMENT" = "staging" ]; then
            SHOULD_AUTO_MERGE=true
            echo "✅ Auto-merge APROVADO: Minor em staging"
          else
            echo "⏸️ Auto-merge NEGADO: Requer revisão manual"
          fi
          
          echo "update_type=$UPDATE_TYPE" >> $GITHUB_OUTPUT
          echo "should_auto_merge=$SHOULD_AUTO_MERGE" >> $GITHUB_OUTPUT
          echo "security_update=$SECURITY_UPDATE" >> $GITHUB_OUTPUT
          echo "target_environment=$TARGET_ENVIRONMENT" >> $GITHUB_OUTPUT

  # ========== JOB 2: AUTO-MERGE INTELIGENTE ==========
  auto-merge-handler:
    name: 🤝 Auto-merge Inteligente
    runs-on: ubuntu-latest
    needs: analyze-dependabot
    if: needs.analyze-dependabot.outputs.should-auto-merge == 'true'
    
    steps:
      - name: ✅ Auto-aprovar com Justificativa
        env:
          TARGET_ENVIRONMENT: ${{ needs.analyze-dependabot.outputs.target-environment }}
          UPDATE_TYPE: ${{ needs.analyze-dependabot.outputs.update-type }}
          SECURITY_UPDATE: ${{ needs.analyze-dependabot.outputs.security-update }}
        run: |
          echo "🤖 Auto-aprovando PR para $TARGET_ENVIRONMENT..."
          
          if [ "$SECURITY_UPDATE" = "true" ]; then
            JUSTIFICATION="🔒 [SECURITY] Auto-aprovação de atualização de segurança para $TARGET_ENVIRONMENT. Vulnerabilidade crítica que deve ser aplicada imediatamente."
          elif [ "$UPDATE_TYPE" = "version-update:semver-patch" ]; then
            JUSTIFICATION="🔧 [PATCH] Auto-aprovação de correção de bugs para $TARGET_ENVIRONMENT. Sem quebras de compatibilidade."
          else
            JUSTIFICATION="📦 [MINOR] Auto-aprovação de atualização menor para $TARGET_ENVIRONMENT."
          fi
          
          gh pr review --approve "${{ github.event.pull_request.html_url }}" --body "$JUSTIFICATION"

      - name: 🚀 Habilitar Auto-merge
        env:
          TARGET_ENVIRONMENT: ${{ needs.analyze-dependabot.outputs.target-environment }}
        run: |
          echo "🚀 Habilitando auto-merge para $TARGET_ENVIRONMENT..."
          gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
          
          # Label específico para tracking
          gh pr edit "${{ github.event.pull_request.html_url }}" --add-label "dependabot-auto-merged-$TARGET_ENVIRONMENT"

  # ========== JOB 3: GESTÃO DE RELEASES (do dependabot-release.yml) ==========
  release-manager:
    name: 🏷️ Gestor de Releases
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dependabot-updates'
    
    outputs:
      release-created: ${{ steps.release.outputs.created }}
      next-version: ${{ steps.version.outputs.version }}
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          fetch-depth: 0
          
      - name: 🔍 Detectar Mudanças  
        id: changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36  # v3.0.2
        with:
          filters: |
            backend:
              - 'apps/backend/**'
            frontend:
              - 'apps/frontend-nextjs/**'
            workflows:
              - '.github/workflows/**'
              
      - name: 🏷️ Calcular Próxima Versão
        id: version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Última tag: $LAST_TAG"
          
          # Extrair versão atual
          if [[ $LAST_TAG =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}  
            PATCH=${BASH_REMATCH[3]}
          else
            MAJOR=1; MINOR=0; PATCH=0
          fi
          
          # Determinar incremento baseado nas mudanças
          if [[ "${{ steps.changes.outputs.backend }}" == "true" && "${{ steps.changes.outputs.frontend }}" == "true" ]]; then
            MINOR=$((MINOR + 1)); PATCH=0
            RELEASE_TYPE="minor"
          else
            PATCH=$((PATCH + 1))
            RELEASE_TYPE="patch"
          fi
          
          NEXT_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          echo "📝 Próxima versão: $NEXT_VERSION ($RELEASE_TYPE)"
          
      - name: 🎉 Criar Release  
        id: release
        uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0  # v2.0.6
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "🤖 Dependabot Updates ${{ steps.version.outputs.version }}"
          body: |
            ## 🤖 Atualizações Automáticas do Dependabot
            
            ### 📊 Mudanças:
            - **Backend**: ${{ steps.changes.outputs.backend == 'true' && '✅' || '❌' }}
            - **Frontend**: ${{ steps.changes.outputs.frontend == 'true' && '✅' || '❌' }}  
            - **Workflows**: ${{ steps.changes.outputs.workflows == 'true' && '✅' || '❌' }}
            
            ### 🚀 Deploy:
            Esta release será automaticamente deployada após os testes.
            
            ---
            🤖 *Gerado automaticamente pelo Dependabot Manager Consolidado*
          draft: false
          prerelease: ${{ steps.version.outputs.type == 'patch' }}
          generate_release_notes: true

# ========== CONCURRENCY: Evita execuções simultâneas ==========
concurrency:
  group: dependabot-consolidated-${{ github.ref }}
  cancel-in-progress: false