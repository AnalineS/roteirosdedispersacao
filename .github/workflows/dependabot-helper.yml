name: ü§ñ Dependabot Helper

on:
  pull_request:
    types: [opened, reopened, synchronize]
    # Manter TODAS as execu√ß√µes para seguran√ßa e qualidade
    # Apenas otimizar condicionais para reduzir trabalho redundante

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-merge:
    name: üîÑ Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        
      - name: üîç Check PR Details
        id: pr-check
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          echo "üìã PR Title: $PR_TITLE"
          
          # Determine update type
          if [[ "$PR_TITLE" == *"patch"* ]] || [[ "$PR_TITLE" == *"security"* ]]; then
            echo "type=patch" >> $GITHUB_OUTPUT
            echo "‚úÖ Patch/Security update detected - will auto-merge"
          elif [[ "$PR_TITLE" == *"minor"* ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Minor update detected - needs review"
          elif [[ "$PR_TITLE" == *"major"* ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
            echo "üö® Major update detected - manual review required"
          else
            echo "type=unknown" >> $GITHUB_OUTPUT
            echo "‚ùì Unknown update type"
          fi
          
      - name: üè∑Ô∏è Add Labels
        uses: actions/labeler@v4
        with:
          configuration-path: |
            dependencies:
              - any: ['**']
            ${{ steps.pr-check.outputs.type }}:
              - any: ['**']
            auto-merge:
              - any: ['**']
        continue-on-error: true
        
      - name: ‚úÖ Auto-approve Patches
        if: steps.pr-check.outputs.type == 'patch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr review --approve "${{ github.event.pull_request.html_url }}"
          echo "‚úÖ PR approved automatically"
          
      - name: üîÑ Enable Auto-merge for Patches
        if: steps.pr-check.outputs.type == 'patch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
          echo "üîÑ Auto-merge enabled - will merge when checks pass"
          
      - name: üí¨ Comment on Minor Updates
        if: steps.pr-check.outputs.type == 'minor'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment "${{ github.event.pull_request.html_url }}" \
            --body "‚ö†Ô∏è **Minor version update detected**
            
            This PR updates to a new minor version. Please review:
            - Check the changelog for new features
            - Verify no breaking changes in minor version
            - Run tests locally if needed
            
            After review, merge manually or approve for auto-merge."
            
      - name: üö® Comment on Major Updates
        if: steps.pr-check.outputs.type == 'major'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment "${{ github.event.pull_request.html_url }}" \
            --body "üö® **Major version update detected**
            
            This PR contains breaking changes. Required actions:
            1. Review the migration guide
            2. Update code to handle breaking changes
            3. Test thoroughly in development
            4. Update documentation if needed
            
            **Do not auto-merge - manual review required!**"

  check-duplicates:
    name: üîç Check for Duplicate PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        
      - name: üîç Find Duplicate PRs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get package name from PR title
          PACKAGE=$(echo "${{ github.event.pull_request.title }}" | sed -n 's/.*bump \(.*\) from.*/\1/p')
          BASE_BRANCH="${{ github.base_ref }}"
          
          if [ -n "$PACKAGE" ]; then
            echo "üì¶ Checking for duplicates of: $PACKAGE (base: $BASE_BRANCH)"
            
            # List all open PRs for this package targeting the same base branch
            DUPLICATES=$(gh pr list --author app/dependabot --state open --base "$BASE_BRANCH" --search "$PACKAGE" --json number,title,headRefName)
            
            COUNT=$(echo "$DUPLICATES" | jq length)
            if [ "$COUNT" -gt 1 ]; then
              echo "‚ö†Ô∏è Found $COUNT PRs for $PACKAGE targeting $BASE_BRANCH"
              
              # Comment on PR about duplicates
              gh pr comment "${{ github.event.pull_request.html_url }}" \
                --body "‚ö†Ô∏è **Duplicate PRs detected para $BASE_BRANCH**
                
                Found multiple PRs for $PACKAGE targeting $BASE_BRANCH:
                \`\`\`
                $DUPLICATES
                \`\`\`
                
                Note: Paired PRs for main/hml branches are expected and normal."
            else
              echo "‚úÖ No duplicates found for $PACKAGE on $BASE_BRANCH"
            fi
          fi

  security-check:
    name: üîí Additional Security Checks
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        
      - name: üîç Check for Known Vulnerabilities
        run: |
          # Extract package and version info
          TITLE="${{ github.event.pull_request.title }}"
          
          # Check if it's a security update
          BASE_BRANCH="${{ github.base_ref }}"
          if [[ "$TITLE" == *"security"* ]] || [[ "${{ github.event.pull_request.body }}" == *"vulnerability"* ]]; then
            echo "üîí Security update detected - prioritizing merge for $BASE_BRANCH"
            
            # Add security label with branch info
            gh pr edit "${{ github.event.pull_request.html_url }}" \
              --add-label "security,priority:high,$BASE_BRANCH-environment"
              
            # Request immediate review with branch context
            gh pr comment "${{ github.event.pull_request.html_url }}" \
              --body "üîí **Security Update - Priority Review Required ($BASE_BRANCH)**
              
              This PR addresses security vulnerabilities for $BASE_BRANCH branch.
              
              ‚ö†Ô∏è **IMPORTANTE**: Esta atualiza√ß√£o est√° sendo aplicada simultaneamente em:
              - üìä **main** (produ√ß√£o)
              - üß™ **hml** (homologa√ß√£o)
              
              **A√ß√µes requeridas:**
              1. Review e merge ASAP
              2. Monitor deploy autom√°tico
              3. Verificar aplica√ß√£o em ambos ambientes
              
              Auto-merge habilitado para deployment mais r√°pido."
              
            # Enable auto-merge regardless of version
            gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
          else
            # Add branch context to regular updates
            gh pr comment "${{ github.event.pull_request.html_url }}" \
              --body "ü§ñ **Dependabot Update for $BASE_BRANCH**
              
              ‚ÑπÔ∏è Esta atualiza√ß√£o faz parte do sistema de deploy simult√¢neo:
              - Esta PR: **$BASE_BRANCH** environment
              - PR pareado: Verificar PRs do Dependabot para o branch complementar
              
              Ambos os PRs ser√£o processados automaticamente conforme as regras de versionamento."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}