name: "[BOT] Dependabot Manager"

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main, hml]
  push:
    branches: [dependabot-updates]
  workflow_dispatch:
    inputs:
      force_review_all:
        description: 'Forçar revisão de todos os PRs pendentes'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  analyze-dependabot-pr:
    name: "[ANALYZE] Analisar PR do Dependabot"
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    
    env:
      TARGET_ENVIRONMENT: ${{ github.base_ref == 'main' && 'production' || 'homologacao' }}
    
    outputs:
      update-type: ${{ steps.analyze.outputs.update_type }}
      should-auto-merge: ${{ steps.analyze.outputs.should_auto_merge }}
    
    steps:
      - name: "[CHECKOUT] Checkout"
        uses: actions/checkout@v4
        
      - name: "[ANALYZE] Analisar Detalhes do PR"
        id: analyze
        run: |
          echo "[ANALYZE] Analisando PR do Dependabot"
          echo "[ANALYZE] Branch de destino: ${{ github.base_ref }} -> $TARGET_ENVIRONMENT"
          
          UPDATE_TYPE="patch"
          SHOULD_AUTO_MERGE=false
          
          if [[ "${{ github.event.pull_request.title }}" == *"security"* ]] || [[ "${{ github.event.pull_request.title }}" == *"Security"* ]]; then
            UPDATE_TYPE="security"
            SHOULD_AUTO_MERGE=true
            echo "[LOCK] Atualizacao de SEGURANCA detectada para $TARGET_ENVIRONMENT"
          elif [[ "${{ github.event.pull_request.title }}" == *"patch"* ]] || [[ "${{ github.event.pull_request.title }}" == *"Patch"* ]]; then
            UPDATE_TYPE="patch"
            SHOULD_AUTO_MERGE=true
            echo "[TOOLS] Atualizacao PATCH detectada para $TARGET_ENVIRONMENT"
          else
            UPDATE_TYPE="manual"
            SHOULD_AUTO_MERGE=false
            echo "[REVIEW] Atualizacao requer revisao manual para $TARGET_ENVIRONMENT"
          fi
          
          echo "update_type=$UPDATE_TYPE" >> $GITHUB_OUTPUT
          echo "should_auto_merge=$SHOULD_AUTO_MERGE" >> $GITHUB_OUTPUT

  auto-merge-handler:
    name: "[PROCESS] Gerenciar Auto-merge"
    runs-on: ubuntu-latest
    needs: analyze-dependabot-pr
    if: needs.analyze-dependabot-pr.outputs.should-auto-merge == 'true'
    
    steps:
      - name: "[OK] Auto-aprovar com Justificativa"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_ENVIRONMENT: ${{ github.base_ref == 'main' && 'production' || 'homologacao' }}
        run: |
          echo "[OK] Auto-aprovando PR do Dependabot para $TARGET_ENVIRONMENT..."
          
          UPDATE_TYPE="${{ needs.analyze-dependabot-pr.outputs.update-type }}"
          
          if [[ "$UPDATE_TYPE" == "security" ]]; then
            JUSTIFICATION="[BOT] Auto-aprovacao de atualizacao de SEGURANCA para $TARGET_ENVIRONMENT. Vulnerabilidade critica que deve ser aplicada imediatamente."
          elif [[ "$UPDATE_TYPE" == "patch" ]]; then
            JUSTIFICATION="[BOT] Auto-aprovacao de atualizacao PATCH para $TARGET_ENVIRONMENT. Correcoes de bugs sem quebra de compatibilidade."
          else
            JUSTIFICATION="[BOT] Auto-aprovacao aplicada para $TARGET_ENVIRONMENT."
          fi
          
          gh pr review --approve "${{ github.event.pull_request.html_url }}" --body "$JUSTIFICATION"

      - name: "[DEPLOY] Habilitar Auto-merge"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_ENVIRONMENT: ${{ github.base_ref == 'main' && 'production' || 'homologacao' }}
        run: |
          echo "[DEPLOY] Habilitando auto-merge para $TARGET_ENVIRONMENT..."
          echo "[DEPLOY] Estrategia: Squash merge para historico limpo"
          gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
          
          gh pr edit "${{ github.event.pull_request.html_url }}" --add-label "dependabot-auto-merged"

concurrency:
  group: dependabot-manager-${{ github.ref }}
  cancel-in-progress: false