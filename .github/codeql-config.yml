# CodeQL Configuration for Medical Educational Platform
# Configuração específica para análise de segurança de plataforma médico-educacional
#
# Esta configuração customiza o CodeQL para:
# - Focar em vulnerabilidades críticas para sistemas médicos
# - Analisar padrões específicos de segurança médica
# - Detectar problemas de validação de dados clínicos
# - Identificar vazamentos de informações sensíveis

name: "Medical Platform Security Analysis"

# Consultas personalizadas para plataforma médica
queries:
  # Consultas de segurança padrão
  - uses: security-extended
  - uses: security-and-quality
  
  # Consultas customizadas (se disponíveis)
  - name: Medical data validation
    uses: ./.github/queries/medical-validation.ql
  - name: Input sanitization
    uses: ./.github/queries/input-sanitization.ql

# Configuração por linguagem
paths-ignore:
  # Ignorar arquivos de teste e temporários
  - "**/*test*"
  - "**/*spec*" 
  - "**/tests/**"
  - "**/node_modules/**"
  - "**/venv/**"
  - "**/__pycache__/**"
  - "**/build/**"
  - "**/dist/**"
  - "**/out/**"
  - "**/.next/**"
  - "**/coverage/**"
  - "**/logs/**"
  - "**/temp/**"
  
paths:
  # Focar em código de produção crítico
  - "apps/backend/main.py"
  - "apps/backend/blueprints/**"
  - "apps/backend/core/**"
  - "apps/backend/services/**"
  - "apps/frontend-nextjs/src/**"

# Configurações específicas para Python
python:
  # Bibliotecas essenciais para análise médica
  setup-python-dependencies: true
  python-executable: python3
  
  # Dependências críticas para análise
  dependencies:
    - flask
    - flask-cors
    - pydantic
    - bleach
    - openai
    - requests
    
# Configurações específicas para JavaScript/TypeScript  
javascript:
  # Incluir TypeScript
  typescript: true
  
  # Configuração do Node.js
  node-version: "18"
  
  # Dependências essenciais
  setup-javascript-dependencies: true

# Configurações de análise avançada
compilation-options:
  # Análise mais profunda para sistemas médicos
  enable-deep-analysis: true
  
  # Timeout estendido para análise completa
  timeout: 30m
  
  # Threads para análise paralela
  threads: 4

# Configurações de relatório
reporting:
  # Incluir contexto adicional nos alerts
  include-source-context: true
  
  # Agrupar por categoria de segurança
  group-by-severity: true
  
  # Focar em vulnerabilidades de alta severidade
  minimum-severity: medium

# Filtros específicos para plataforma médica
filters:
  # Excluir falsos positivos conhecidos
  exclude:
    - "Test files should not be analyzed"
    - "Development configuration detected"
    - "Debug mode enabled in development"
    
  # Priorizar problemas médicos críticos  
  include:
    - "SQL injection vulnerability"
    - "Cross-site scripting vulnerability" 
    - "Improper input validation"
    - "Information disclosure"
    - "Authentication bypass"
    - "Authorization flaw"
    - "Sensitive data exposure"
    - "Insecure data storage"
    - "Inadequate encryption"
    - "Session management flaw"

# Configurações de performance
performance:
  # Cache para análises incrementais
  enable-cache: true
  
  # Análise incremental quando possível
  incremental-analysis: true
  
  # Otimização para repositórios médicos
  medical-platform-optimizations: true

# Configurações de compliance
compliance:
  # Padrões de conformidade médica
  medical-standards:
    - "LGPD" # Lei Geral de Proteção de Dados
    - "CFM-2314-2022" # Resolução CFM sobre Telemedicina
    - "ANVISA-RDC-4-2009" # Farmacovigilância
    
  # Verificações de segurança médica
  medical-security-checks:
    - patient-data-protection
    - medication-calculation-validation
    - clinical-data-sanitization
    - medical-disclaimer-compliance
    
# Configurações de notificação
notifications:
  # Notificar sobre vulnerabilidades críticas
  critical-vulnerabilities: true
  
  # Relatório semanal de segurança
  weekly-security-report: true
  
  # Alertas para compliance médico
  medical-compliance-alerts: true