#!/usr/bin/env python3
import os
import re

def fix_emojis_in_workflows():
    """Substitui apenas emojis por tags ASCII, preservando estrutura YAML"""
    
    workflows_dir = '.github/workflows'
    yaml_files = ['dependabot-manager.yml', 'hml-pipeline.yml', 'main-pipeline.yml', 'security-unified.yml']
    
    # Mapeamento completo de emojis para ASCII
    emoji_map = {
        # Principais emojis problem√°ticos
        'ü§ñ': '[BOT]',
        'üîç': '[ANALYZE]', 
        'üì•': '[CHECKOUT]',
        'üì¶': '[PACKAGE]',
        'üîí': '[LOCK]',
        '‚ö†Ô∏è': '[WARNING]',
        'üìà': '[STATS]',
        'üîß': '[TOOLS]',
        '‚úÖ': '[OK]',
        '‚ùå': '[ERROR]',
        'üöÄ': '[DEPLOY]',
        '‚ö°': '[FAST]',
        'üõ°Ô∏è': '[SHIELD]',
        'üêõ': '[BUG]',
        '‚ú®': '[SPARKLE]',
        'üõ†Ô∏è': '[REPAIR]',
        'üí¨': '[COMMENT]',
        'üìã': '[CLIPBOARD]',
        'üìñ': '[DOCS]',
        'üß™': '[TEST]',
        'üîÑ': '[PROCESS]',
        'üìä': '[MONITOR]',
        'üö®': '[ALERT]',
        'üìß': '[EMAIL]',
        'üè•': '[HEALTH]',
        'üìû': '[PHONE]',
        'üë•': '[USERS]',
        'üè∑Ô∏è': '[TAG]',
        'üìù': '[DOCS]',
        'üßπ': '[CLEANUP]',
        'üóÑÔ∏è': '[ARCHIVE]',
        'üéØ': '[TARGET]',
        'üåç': '[WORLD]',
        'üé®': '[ART]',
        'üì±': '[MOBILE]',
        'üè†': '[HOME]',
        'üîó': '[LINK]',
        'üíæ': '[BACKUP]',
        'üåê': '[WEB]',
        'üèóÔ∏è': '[BUILD]',
        'üí°': '[IDEA]',
        'üìÖ': '[DATE]',
        'üë§': '[USER]',
        'üéâ': '[PARTY]',
        'üí∞': '[MONEY]',
        'üóëÔ∏è': '[TRASH]',
        'üì≤': '[NOTIFY]',
        'üî•': '[FIRE]',
        
        # S√≠mbolos de interface
        '‚úã': '[-]',
        '‚è≠Ô∏è': '[SKIP]',
        'üí≠': '[THINK]',
        '‚ÄºÔ∏è': '[URGENT]',
        'üîé': '[SEARCH]',
        'üé≠': '[MASK]',
        'üèÑ': '[SURF]',
    }
    
    fixed_files = []
    
    print("=== SUBSTITUINDO EMOJIS POR TAGS ASCII ===")
    print()
    
    for filename in yaml_files:
        filepath = os.path.join(workflows_dir, filename)
        
        if not os.path.exists(filepath):
            print(f"[SKIP] {filename} - Arquivo n√£o encontrado")
            continue
            
        print(f"Processando: {filename}")
        
        # L√™ o arquivo
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        emoji_count = 0
        
        # Substitui cada emoji por sua tag ASCII
        for emoji, tag in emoji_map.items():
            if emoji in content:
                count_before = content.count(emoji)
                content = content.replace(emoji, tag)
                emoji_count += count_before
                if count_before > 0:
                    print(f"  [EMOJI] -> {tag} ({count_before}x)")
        
        # Se houve mudan√ßas, salva o arquivo
        if content != original_content:
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(content)
            fixed_files.append(filename)
            print(f"  [FIXED] {emoji_count} emojis substitu√≠dos")
        else:
            print(f"  [OK] Nenhum emoji encontrado")
    
    print()
    print(f"=== RESUMO ===")
    print(f"Arquivos processados: {len(yaml_files)}")
    print(f"Arquivos modificados: {len(fixed_files)}")
    if fixed_files:
        print("Arquivos alterados:", ', '.join(fixed_files))

if __name__ == "__main__":
    fix_emojis_in_workflows()