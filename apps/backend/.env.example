# ============================================================================
# BACKEND ENVIRONMENT VARIABLES - Complete Configuration
# Copy to .env.local for development or configure via GitHub Secrets for production
# All variables listed here are required for the backend to start without warnings
# ============================================================================

# === EMAIL CONFIGURATION ===
# Required email configuration - prevents startup warnings
EMAIL_FROM=noreply@roteirosdedispensacao.com              # Sender email (REQUIRED)
EMAIL_PASSWORD=your_email_app_password_here               # Email password/app password (REQUIRED)
EMAIL_FROM_NAME=Roteiro de Dispensação PQT-U              # Sender name
EMAIL_REPLY_TO=suporte@roteirosdedispensacao.com          # Reply-to email

# Email Provider Settings
EMAIL_PROVIDER=smtp                                       # smtp or sendgrid
SMTP_HOST=smtp.gmail.com                                  # SMTP host
SMTP_PORT=587                                             # SMTP port
SMTP_USE_TLS=true                                         # Use TLS
SMTP_USE_SSL=false                                        # Use SSL

# Rate Limiting
EMAIL_RATE_LIMIT=100                                      # Emails per minute
EMAIL_RATE_LIMIT_HOUR=1000                               # Emails per hour

# === DATABASE CONFIGURATION ===
# Configuração do banco de dados para features sociais
DATABASE_URL=mysql://user:password@localhost:3306/roteiros_hanseniase
DB_HOST=localhost
DB_PORT=3306
DB_USER=root
DB_PASSWORD=your_db_password
DB_NAME=roteiros_hanseniase

# Connection Pool
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# === CORE FLASK CONFIGURATION ===
# Required environment variables - NO WARNINGS
SECRET_KEY=your_very_secure_secret_key_here_min_32_chars  # Flask secret key (REQUIRED)
FLASK_ENV=development                                     # development/staging/production
DEBUG=true                                               # Enable debug mode
ENVIRONMENT=development                                   # Current environment

# === SERVER CONFIGURATION ===
HOST=0.0.0.0                                            # Server host
PORT=8080                                                # Server port (Cloud Run compatible)

# === SECURITY CONFIGURATION ===
JWT_SECRET_KEY=your_jwt_secret_key_here                   # JWT signing key
PASSWORD_SALT=your_password_salt_here                     # Password hashing salt

# === CORS CONFIGURATION ===
# Development CORS (override in production)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173
CORS_ALLOW_CREDENTIALS=true

# === FIREBASE CONFIGURATION ===
# Já configurado via GitHub Secrets (reutilizar)
NEXT_PUBLIC_FIREBASE_API_KEY=${FIREBASE_API_KEY}
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
NEXT_PUBLIC_FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
NEXT_PUBLIC_FIREBASE_APP_ID=${FIREBASE_APP_ID}

# === SOCIAL FEATURES CONFIGURATION ===
# Configurações específicas das funcionalidades sociais
ENABLE_SOCIAL_SHARING=true                                # Habilitar compartilhamento social
ENABLE_EMAIL_NOTIFICATIONS=true                           # Habilitar notificações por email
ENABLE_AVATAR_UPLOAD=true                                 # Habilitar upload de avatar
AVATAR_MAX_SIZE=5242880                                   # Tamanho máximo do avatar (5MB)
AVATAR_ALLOWED_FORMATS=jpg,jpeg,png,webp                 # Formatos permitidos

# Social Platform URLs (para compartilhamento)
TWITTER_SHARE_URL=https://twitter.com/intent/tweet
FACEBOOK_SHARE_URL=https://www.facebook.com/sharer/sharer.php
LINKEDIN_SHARE_URL=https://www.linkedin.com/sharing/share-offsite/

# === MONITORING AND LOGGING ===
# Configurações de monitoramento
LOG_LEVEL=INFO                                            # DEBUG, INFO, WARNING, ERROR
STRUCTURED_LOGGING=true                                   # Usar logging estruturado (JSON)
LOG_FILE=logs/backend.log                                 # Arquivo de log

# Analytics Integration
ENABLE_ANALYTICS_TRACKING=true                            # Habilitar tracking de analytics
ANALYTICS_ENDPOINT=/api/analytics/track                   # Endpoint para eventos de analytics

# === DEVELOPMENT CONFIGURATION ===
# Configurações específicas para desenvolvimento
FLASK_ENV=development                                     # development ou production
DEBUG=true                                               # Habilitar modo debug
TESTING=false                                            # Modo de teste

# Hot Reload
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=5000
FLASK_RUN_RELOAD=true

# === PRODUCTION CONFIGURATION ===
# Configurações para produção (sobrescrever em .env.production)
# SESSION_COOKIE_SECURE=true
# SESSION_COOKIE_HTTPONLY=true  
# SESSION_COOKIE_SAMESITE=Strict
# MAX_CONTENT_LENGTH=16777216
# PERMANENT_SESSION_LIFETIME=1800

# === FEATURE FLAGS ===
# Flags para controlar funcionalidades
FEATURE_EMAIL_TEMPLATES=true                             # Templates de email avançados
FEATURE_BATCH_NOTIFICATIONS=true                         # Notificações em lote
FEATURE_ADVANCED_ANALYTICS=true                          # Analytics avançados
FEATURE_SOCIAL_PROFILES=true                             # Perfis sociais públicos
FEATURE_ACHIEVEMENT_SHARING=true                         # Compartilhamento de conquistas

# === AI API CONFIGURATION ===
# Required for AI functionality
OPENROUTER_API_KEY=your_openrouter_api_key_here          # OpenRouter API key (REQUIRED)
HUGGINGFACE_API_KEY=your_huggingface_api_key_here        # HuggingFace API key (optional)

# === GOOGLE CLOUD CONFIGURATION ===
# Google Cloud Storage and Services - REAL INTEGRATION
GOOGLE_CLOUD_PROJECT=your-project-id                     # GCP Project ID (REQUIRED)
CLOUD_STORAGE_BUCKET=your-bucket-name                    # GCS bucket for medical documents (REQUIRED)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json  # Service account file path
GOOGLE_APPLICATION_CREDENTIALS_JSON={}                   # Service account JSON (alternative to file)

# Specialized GCS buckets
GCS_CACHE_BUCKET=your-cache-bucket                       # Cache storage bucket
GCS_BACKUP_BUCKET=your-backup-bucket                     # Database backups
GCS_MEDICAL_DOCUMENTS_BUCKET=your-medical-docs-bucket    # Medical document storage

# Google Cloud Monitoring
GOOGLE_CLOUD_MONITORING_ENABLED=true                     # Enable monitoring
GCP_REGION=us-central1                                   # GCP region

# === EXTERNAL API CONFIGURATION ===
# Optional APIs
GOOGLE_API_KEY=your_google_api_key                       # Google APIs (optional)
RECAPTCHA_SECRET_KEY=your_recaptcha_secret               # Anti-spam protection (optional)

# === SUPABASE CONFIGURATION ===
# Database and Vector Store (Supabase + pgvector) - REAL INTEGRATION
SUPABASE_URL=https://your-project.supabase.co           # Supabase project URL (REQUIRED)
SUPABASE_ANON_KEY=your_supabase_anon_key                 # Supabase anon key (REQUIRED)
SUPABASE_SERVICE_KEY=your_supabase_service_key           # Supabase service key (REQUIRED for server-side)
SUPABASE_JWT_SECRET=your_supabase_jwt_secret             # JWT secret for verification
SUPABASE_API_KEY=your_supabase_api_key                   # Alternative API key format
SUPABASE_PROJECT_ID=your_project_id                      # Project ID
SUPABASE_PROJECT_URL=https://your-project.supabase.co   # Alternative URL format
SUPABASE_DB_URL=postgresql://postgres.your-project:password@aws-0-region.pooler.supabase.com:5432/postgres  # Direct PostgreSQL connection for pgvector

# Vector Store Configuration
SUPABASE_VECTOR_DIMENSION=1536                           # OpenAI embeddings dimension
SUPABASE_VECTOR_SIMILARITY_THRESHOLD=0.8                # Similarity threshold for search

# === CACHE CONFIGURATION ===
# Configuração de cache (Firestore hybrid cache system)
CACHE_TYPE=firestore                                     # firestore ou filesystem
CACHE_DEFAULT_TIMEOUT=300                                # Timeout padrão do cache (segundos)
FIRESTORE_CACHE_COLLECTION=cache                         # Coleção do Firestore para cache

# === TASK QUEUE CONFIGURATION ===
# Fila de tarefas para processamento assíncrono (Firestore backend)
CELERY_BROKER_URL=firestore://                           # Firestore como broker
CELERY_RESULT_BACKEND=firestore://                       # Firestore como backend
CELERY_TASK_ALWAYS_EAGER=false                          # Executar tarefas imediatamente (dev)

# === DEVELOPMENT DEFAULTS ===
# Safe defaults that prevent startup warnings
LOG_LEVEL=INFO                                           # Logging level
TESTING=false                                            # Test mode
ADVANCED_FEATURES=true                                   # Enable advanced features
RAG_AVAILABLE=true                                       # Enable RAG system
EMBEDDINGS_ENABLED=true                                  # Enable embeddings
SECURITY_MIDDLEWARE_ENABLED=true                        # Security middleware
RATE_LIMIT_ENABLED=true                                  # Rate limiting
METRICS_ENABLED=true                                     # Metrics collection
QA_ENABLED=true                                          # QA framework

# Cache Configuration
UNIFIED_CACHE_ENABLED=true                              # Unified cache system
MEMORY_CACHE_SIZE=1000                                  # Memory cache size
MEMORY_CACHE_TTL=3600                                   # Cache TTL seconds

# Security Headers
SESSION_COOKIE_SECURE=false                             # HTTPS only (set true in prod)
SESSION_COOKIE_HTTPONLY=true                            # HTTP only cookies
SESSION_COOKIE_SAMESITE=Lax                             # SameSite policy
MAX_CONTENT_LENGTH=16777216                             # Max request size (16MB)

# === LOCAL DEVELOPMENT ALTERNATIVES ===
# LocalStack for local AWS-compatible services
LOCALSTACK_ENABLED=false                                 # Enable LocalStack for local development
LOCALSTACK_ENDPOINT=http://localhost:4566               # LocalStack endpoint

# Local PostgreSQL with pgvector
LOCAL_POSTGRES_URL=postgresql://postgres:postgres@localhost:5432/medical_platform
LOCAL_POSTGRES_ENABLED=false                            # Use local PostgreSQL instead of Supabase

# Local Redis (optional)
LOCAL_REDIS_URL=redis://localhost:6379/0                # Local Redis for caching
LOCAL_REDIS_ENABLED=false                               # Use local Redis

# ============================================================================
# CONFIGURATION NOTES:
#
# 1. NEVER commit .env files with real values to version control
# 2. Use GitHub Secrets for production deployment
# 3. Copy to .env.local for local development and fill in real values
# 4. All REQUIRED variables must be set to prevent startup warnings
# 5. This configuration supports both REAL cloud services and local alternatives
# 6. Set LOCAL_*_ENABLED=true for local development without cloud services
# 7. All cloud integrations are REAL - NO MOCKS
# 8. Check app_config.py for complete variable mappings
# ============================================================================