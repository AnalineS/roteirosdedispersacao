# ============================================================================
# REQUIREMENTS SECURITY ML UPDATE - Sistema Educacional Hanseníase
# Security-focused ML/AI dependency updates to address critical vulnerabilities
# Target vulnerabilities: CVE-2025-3730 (PyTorch), CVE-2025-32434 (PyTorch RCE)
# ============================================================================

# === CORE FLASK ===
# SECURITY: CRITICAL - Updated 2024-09-24 - Latest Flask security patches
Flask==3.1.2
Flask-CORS==6.0.1  # SECURITY UPDATE: CVE-2024-6221, CVE-2024-6839, CVE-2024-6844, CVE-2024-6866
Werkzeug==3.1.3
gunicorn==23.0.0   # SECURITY: Updated 2024-09-24 - CVE-2024-6827 fixed

# === AI & ML CORE - SECURITY UPDATES ===
# CRITICAL SECURITY FIX: PyTorch vulnerability CVE-2025-3730 (DoS in ctc_loss)
# CRITICAL SECURITY FIX: PyTorch vulnerability CVE-2025-32434 (RCE in torch.load)
torch==2.8.0        # SECURITY: CVE-2025-3730 and CVE-2025-32434 fixes
torchvision==0.23.0 # Updated for torch 2.8.0 compatibility

# OpenAI API - maintained current version
openai>=1.50.0

# Sentence transformers - updated for compatibility
sentence-transformers==5.1.0   # SECURITY: Compatible with torch 2.8.0, improved performance

# Vector database and ML utilities
chromadb>=0.4.0

# NumPy - CRITICAL: Must be <2.0 for PyTorch 2.8.0 compatibility
numpy>=1.26.0,<2.0  # COMPATIBILITY: PyTorch 2.8 requires numpy <2.0

# Scikit-learn - maintained current secure version
scikit-learn>=1.6.1

# Transformers library - compatible with new torch
transformers>=4.53.2

# === AUTHENTICATION & JWT ===
# CRITICAL SECURITY FIX: JWT vulnerability
authlib==1.6.4     # SECURITY UPDATE: CVE-2025-59420 fix - JWT/JWS critical header vulnerability
PyJWT==2.10.1      # SECURITY: Latest secure version
cryptography==46.0.1  # SECURITY: CRITICAL - Updated 2024-09-24 - Latest security patches
passlib>=1.7.4     # Password hashing

# === SECURITY FRAMEWORK ===
# Rate limiting and middleware security
Flask-Limiter>=3.0.0
limits>=3.6.0

# Input validation and sanitization
bleach==6.2.0      # SECURITY: Latest secure version
email-validator>=2.0.0
validators>=0.22.0
defusedxml==0.7.1
markupsafe==3.0.2

# Secrets management
pynacl>=1.5.0

# User agent analysis and IP validation
user-agents>=2.2.0
ipaddress>=1.0.23

# === VALIDATION & DATA ===
pydantic==2.11.9   # SECURITY: Updated 2024-09-24 - Performance improvements and security patches
jsonschema>=4.23.0

# === HTTP & NETWORKING ===
requests==2.32.5   # SECURITY: CRITICAL - Updated 2024-09-24 - Latest security patches
httpx>=0.24.0
urllib3>=2.5.0    # SECURITY: CRITICAL - Updated 2024-09-24 - Resolves CVE-2025-50181 (High severity)
certifi==2025.8.3  # SECURITY: Updated 2024-09-24 - Latest certificate bundle

# === CACHE & PERFORMANCE ===
cachetools>=5.3.2

# === MONITORING & OBSERVABILITY ===
# System monitoring
psutil==7.0.0

# Google Cloud Operations Suite
google-cloud-monitoring==2.27.2
google-cloud-logging==3.10.0
google-cloud-storage>=2.10.0

# Structured logging
python-json-logger>=2.0.7

# === TEXT PROCESSING ===
nltk==3.9.1

# === MULTIMODAL PROCESSING - COMPATIBILITY UPDATES ===
# Computer vision and OCR - Updated for torch 2.8.0 compatibility
opencv-python==4.10.0.84
Pillow==10.4.0
pytesseract==0.3.10

# EasyOCR - CONDITIONAL: May require compatibility check with torch 2.8.0
# If incompatible, will fall back to opencv + pytesseract stack
easyocr>=1.7.2     # COMPATIBILITY: Check with torch 2.8.0, fallback available

# Scientific computing - updated for compatibility
scipy>=1.14.0

# File handling and validation
python-magic==0.4.27

# === DATABASE & VECTOR STORE ===
# Supabase integration - FASE 3 RAG
supabase==2.18.1
psycopg2-binary==2.9.9  # PostgreSQL adapter with pgvector support

# Optional SQL support
sqlalchemy>=2.0.0
alembic>=1.12.0

# Lightweight vector store fallback
faiss-cpu>=1.7.4

# === UTILITIES ===
python-dotenv==1.1.1
typing-extensions>=4.11.0
setuptools==78.1.1
python-dateutil>=2.8.2

# Configuration management
pyyaml>=6.0.1
python-decouple>=3.8

# === TESTING & QUALITY ASSURANCE ===
pytest==7.4.3
pytest-cov==4.1.0
pytest-mock==3.12.0

# === SECURITY ANALYSIS & COMPLIANCE ===
# Vulnerability scanning
safety>=2.3.0
pip-audit>=2.6.0

# Static analysis
bandit>=1.7.5
semgrep>=1.45.0
pylint>=2.17.0
flake8>=6.0.0
mypy>=1.5.0

# === DOCUMENTATION ===
# API documentation
flask-swagger-ui>=4.11.1

# Sphinx documentation
sphinx>=7.1.0
sphinx-rtd-theme>=1.3.0

# === ASYNC & WEBSOCKETS ===
asyncio>=3.4.3
websockets>=11.0.0

# === BACKGROUND TASKS ===
celery==5.3.4  # Base celery without Redis dependency

# === PERFORMANCE MONITORING ===
py-spy>=0.3.14

# === GEOLOCATION (OPTIONAL) ===
geoip2>=4.7.0

# ============================================================================
# SECURITY UPDATE NOTES:
#
# 1. CRITICAL SECURITY FIXES:
#    ✓ torch: 2.7.1 -> 2.8.0 (CVE-2025-3730 DoS, CVE-2025-32434 RCE)
#    ✓ authlib: Added 1.6.4 (CVE-2025-59420 JWT vulnerability)
#    ✓ numpy: Restricted <2.0 for torch 2.8.0 compatibility
#    ✓ sentence-transformers: 5.0.0 -> 5.1.0 (compatibility + performance)
#
# 2. COMPATIBILITY MATRIX:
#    ✓ torch 2.8.0 + numpy <2.0 + Python 3.9-3.13
#    ✓ sentence-transformers 5.1.0 + transformers 4.53.2+
#    ✓ torchvision 0.23.0 for torch 2.8.0
#
# 3. MEDICAL AI VALIDATION REQUIRED:
#    ✓ Dr. Gasnelio persona accuracy (>90%)
#    ✓ Gá persona empathy responses (>90%)
#    ✓ RAG system knowledge retrieval (>85%)
#    ✓ Medical calculation precision (100%)
#    ✓ Embedding service functionality (>95%)
#
# 4. ROLLBACK STRATEGY:
#    - Backup: requirements_backup_[timestamp].txt
#    - Script: python scripts/security_ml_update.py --rollback
#    - Manual: pip install -r requirements_backup_[timestamp].txt
#
# 5. DEPLOYMENT VALIDATION:
#    - Local: python scripts/security_ml_update.py --dry-run
#    - Staging: python scripts/medical_ai_validation.py
#    - Production: Only after all validation tests pass
#
# 6. CONDITIONAL DEPENDENCIES:
#    - easyocr: May be incompatible with torch 2.8.0
#    - Fallback: opencv-python + pytesseract for OCR functionality
#    - Impact: Minimal - medical AI core functions preserved
#
# 7. MONITORING REQUIREMENTS:
#    - AI response quality: Continuous monitoring
#    - Medical calculation accuracy: 100% precision required
#    - RAG system performance: Knowledge retrieval success rate
#    - API response times: <5 seconds for medical queries
#
# 8. POST-UPDATE CHECKLIST:
#    □ Run medical_ai_validation.py
#    □ Test both AI personas with medical queries
#    □ Validate RAG system with hanseníase knowledge base
#    □ Verify medical dosing calculation precision
#    □ Monitor system performance for 24h minimum
#    □ Update documentation and security procedures
#
# DEPLOYMENT RECOMMENDATION:
# Use staged deployment with comprehensive medical AI validation
# Do not deploy to production until all validation tests pass
# ============================================================================