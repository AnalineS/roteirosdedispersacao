{
  "name": "roteiros-dispensacao-nextjs",
  "version": "1.0.0",
  "private": true,
  "description": "Sistema QA abrangente para recursos educativos de hanseníase - v1.0.0",
  "scripts": {
    "dev": "next dev",
    "dev:clean": "npm run cleanup && npm run dev",
    "build": "next build",
    "build:development": "NEXT_PUBLIC_ENVIRONMENT=development next build",
    "build:staging": "NEXT_PUBLIC_ENVIRONMENT=staging next build && npm run copy-standalone-assets",
    "build:production": "NEXT_PUBLIC_ENVIRONMENT=production next build && npm run copy-standalone-assets",
    "build:standalone": "next build && npm run copy-standalone-assets",
    "copy-standalone-assets": "node -e \"const fs = require('fs'); const path = require('path'); if (fs.existsSync('.next/standalone')) { const cp = require('child_process'); try { cp.execSync('cp -r public .next/standalone/ 2>/dev/null || xcopy public .next\\\\standalone\\\\ /E /I /Y', {stdio: 'inherit'}); cp.execSync('cp -r .next/static .next/standalone/.next/ 2>/dev/null || xcopy .next\\\\static .next\\\\standalone\\\\.next\\\\ /E /I /Y', {stdio: 'inherit'}); console.log('✅ Standalone assets copied successfully'); } catch(e) { console.log('⚠️ Could not copy some assets, build may still work'); } } else { console.log('⚠️ No standalone directory found'); }\"",
    "start": "next start",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "type-check": "tsc --noEmit",
    "cleanup": "node scripts/cleanup-dev.js",
    "cleanup:force": "node scripts/cleanup-dev.js --force",
    "cleanup:tests": "node ../../scripts/cleanup-obsolete-tests.js",
    "cleanup:all": "npm run cleanup && npm run cleanup:tests",
    "test": "jest",
    "test:playwright": "playwright test",
    "test:playwright:ui": "playwright test --ui",
    "test:playwright:debug": "playwright test --debug",
    "test:medical": "playwright test tests/playwright/e2e-medical.spec.ts",
    "test:medical:validate": "node ../../scripts/medical-validation-automation.js",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:unit": "jest --testPathPattern=/tests/",
    "test:integration": "jest --testPathPattern=/tests/integration/",
    "test:educational": "jest --testPathPattern=/tests/educational/",
    "test:clinical-cases": "jest --testPathPattern=clinicalCasesQA.test.ts",
    "test:dose-calculator": "jest --testPathPattern=doseCalculatorQA.test.ts",
    "test:interactive-components": "jest --testPathPattern=interactiveComponentsQA.test.ts",
    "test:performance": "jest --testPathPattern=performance --runInBand",
    "test:a11y": "jest --testPathPattern=accessibility --runInBand",
    "test:personas": "jest --testPathPattern=personas",
    "test:consistency": "jest --testPathPattern=consistency",
    "test:cache": "node src/scripts/testCacheBasic.js",
    "test:rag": "node src/scripts/runRAGTests.js",
    "qa:run": "node scripts/runQA.js",
    "integrate-errors": "tsx scripts/integrate-error-handlers.ts",
    "qa:full": "npm run qa:run -- --suite=full",
    "qa:targeted": "npm run qa:run -- --types=clinical_accuracy,educational_value",
    "qa:report": "node scripts/generateQAReport.js",
    "qa:validate-deploy": "npm run qa:run -- --validate-deploy",
    "qa:monitor": "node scripts/startQAMonitoring.js",
    "qa:dashboard": "next dev --port 3001 -- --qa-dashboard",
    "generate:icons": "node scripts/generatePWAIcons.js",
    "analyze:bundle": "ANALYZE=true npm run build",
    "audit:security": "npm audit --audit-level moderate",
    "audit:licenses": "license-checker --summary",
    "audit:supply-chain": "node security_audit_script.js",
    "security:check": "npm run audit:security && npm run audit:supply-chain",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "pre-commit": "lint-staged",
    "prepare": "echo 'Skipping husky install in subproject'",
    "claude:activate": "node ../../scripts/activate-claude-automations.js",
    "claude:health": "node ../../scripts/activate-claude-automations.js --health",
    "claude:stop": "node ../../scripts/activate-claude-automations.js --stop",
    "claude:status": "node ../../scripts/activate-claude-automations.js --status",
    "claude:quality-check": "node ../../scripts/claude-quality-check.js",
    "claude:lgpd": "node ../../.claude/automation/lgpd-robust.js",
    "claude:monitoring": "node ../../.claude/automation/continuous-monitoring-system.js"
  },
  "dependencies": {
    "@next/third-parties": "^15.5.4",
    "axios": "1.12.2",
    "dompurify": "^3.2.7",
    "framer-motion": "^12.23.22",
    "js-cookie": "3.0.5",
    "jspdf": "^3.0.3",
    "lucide-react": "^0.544.0",
    "next": "^15.5.4",
    "react": "^19.2.0",
    "react-dom": "^19.2.0",
    "react-ga4": "^2.1.0",
    "react-image-crop": "^11.0.10",
    "web-vitals": "^5.1.0",
    "zod": "^4.1.5"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@jest/globals": "^30.2.0",
    "@next/bundle-analyzer": "^15.5.4",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.5.0",
    "@types/dompurify": "^3.2.0",
    "@types/glob": "^8.1.0",
    "@types/jest": "^30.0.0",
    "@types/js-cookie": "3.0.6",
    "@types/node": "^24.5.2",
    "@types/react": "^19.2.0",
    "@types/react-dom": "^19.2.0",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "babel-plugin-react-compiler": "^19.0.0-beta-af1b7da-20250417",
    "eslint": "^9.37.0",
    "eslint-config-next": "^15.5.4",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jest": "^30.2.0",
    "jest-environment-jsdom": "^30.2.0",
    "license-checker": "^25.0.1",
    "lint-staged": "^16.2.3",
    "prettier": "^3.0.0",
    "sharp": "^0.34.4",
    "string-replace-loader": "^3.2.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.0",
    "typescript": "^5.9.3",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,css,md}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "education",
    "healthcare",
    "hanseniase",
    "qa",
    "quality-assurance",
    "pharmacology",
    "clinical-cases"
  ]
}
