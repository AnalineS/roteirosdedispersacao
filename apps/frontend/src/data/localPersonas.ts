/**
 * Personas locais para fallback quando backend n√£o estiver dispon√≠vel
 * FASE 7: Plano B - Dados locais como alternativa
 */

export const LOCAL_PERSONAS = {
  dr_gasnelio: {
    id: 'dr_gasnelio',
    name: 'Dr. Gasnelio',
    role: 'Especialista em Hansen√≠ase',
    description: 'M√©dico especialista com anos de experi√™ncia no tratamento de hansen√≠ase',
    avatar: 'üë®‚Äç‚öïÔ∏è',
    specialties: [
      'Diagn√≥stico cl√≠nico',
      'Tratamento medicamentoso',
      'Acompanhamento de casos',
      'Orienta√ß√µes t√©cnicas'
    ],
    greeting: 'Ol√°! Sou o Dr. Gasnelio, especialista em hansen√≠ase. Como posso ajud√°-lo hoje?',
    style: 't√©cnico e preciso'
  },
  ga: {
    id: 'ga',
    name: 'G√°',
    role: 'Assistente Educacional',
    description: 'Assistente emp√°tico especializado em apoio emocional e orienta√ß√µes pr√°ticas',
    avatar: 'ü§ù',
    specialties: [
      'Apoio emocional',
      'Orienta√ß√µes pr√°ticas',
      'Esclarecimento de d√∫vidas',
      'Suporte ao paciente'
    ],
    greeting: 'Oi! Eu sou a G√°, sua assistente educacional. Estou aqui para te apoiar e esclarecer suas d√∫vidas de forma simples e acolhedora.',
    style: 'emp√°tico e acolhedor'
  }
}

// Fun√ß√£o para simular resposta do backend
export function getLocalPersonas() {
  return {
    status: 'success',
    data: {
      personas: LOCAL_PERSONAS
    },
    timestamp: new Date().toISOString()
  }
}

// Fun√ß√£o para simular chat offline
export function generateOfflineResponse(personaId: string, _message: string) {
  const persona = LOCAL_PERSONAS[personaId as keyof typeof LOCAL_PERSONAS]
  
  if (!persona) {
    return {
      error: 'Persona n√£o encontrada'
    }
  }
  
  const offlineResponses = {
    dr_gasnelio: [
      'Desculpe, estou temporariamente offline. Por favor, consulte um profissional de sa√∫de para orienta√ß√µes sobre hansen√≠ase.',
      'No momento estou sem conex√£o com o servidor. Recomendo que procure atendimento m√©dico presencial para suas d√∫vidas.',
      'Sistema temporariamente indispon√≠vel. Para informa√ß√µes urgentes sobre hansen√≠ase, procure uma unidade de sa√∫de.'
    ],
    ga: [
      'Oi! Parece que estamos sem conex√£o no momento. Mas n√£o se preocupe, logo voltaremos!',
      'Ops! Estou temporariamente offline. Enquanto isso, lembre-se: voc√™ n√£o est√° sozinho nessa jornada!',
      'Estamos com um probleminha t√©cnico, mas j√° estamos trabalhando para resolver. Volte em breve!'
    ]
  }
  
  const responses = offlineResponses[personaId as keyof typeof offlineResponses] || []
  const randomResponse = responses[Math.floor(Math.random() * responses.length)]
  
  return {
    status: 'offline',
    data: {
      message: {
        id: `offline-${Date.now()}`,
        content: randomResponse,
        persona: personaId,
        timestamp: new Date(),
        confidence: 0,
        metadata: {
          offline: true
        }
      }
    }
  }
}